# Use node 8.9.4 as the base image
FROM node:8.9.4

# Set the environment switch for scripts
ENV FS_DOCKER=true

# create a top level node directory and copy the server package.json
# into it
# set the work dir to /node
RUN mkdir -p /node
COPY ./server/package.json /node
WORKDIR /node

# install the latest version of yarn
RUN npm install yarn -g

# run yarn to get all dependencies
RUN yarn

# change the node path env var to the new node_modules directory
# and add the new node .bin to the path
ENV NODE_PATH=/node/node_modules
ENV PATH=/node/node_modules/.bin:$PATH

# set the workdir as the /app directory
# this dir is mapped to the server directory in the cloned repo
WORKDIR /app

# Make port 8080 available to the world outside this container
EXPOSE 8080

ARG VCAP_SERVICES
ARG AWS_CONFIG
ARG VCAP_APPLICATION='{"uris":["http://localhost:8080/"]}'
ARG PLATFORM=local
ARG SNYK_TOKEN

# env vars for VCAP_SERVICES and DATABASE_URL
ENV VCAP_SERVICES=$VCAP_SERVICES
ENV AWS_CONFIG=$AWS_CONFIG
ENV VCAP_APPLICATION=$VCAP_APPLICATION
ENV PLATFORM=$PLATFORM
ENV DATABASE_URL=postgresql://postgres:postgres@fs-intake-postgres:5432/postgres
ENV SNYK_TOKEN=$SNYK_TOKEN

# Add Arial for docker images

RUN apt-get update && apt-get -y install cabextract xfonts-utils #Required for mscorefonts
RUN wget http://ftp.us.debian.org/debian/pool/contrib/m/msttcorefonts/ttf-mscorefonts-installer_3.6_all.deb
RUN dpkg -i ttf-mscorefonts-installer_3.6_all.deb
RUN fc-cache

# symlink the node_modules directory into the app dir
RUN ln -s /node/node_modules /app/node_modules

# startup node with app.es6 when the container launches
#CMD ["/node/node_modules/.bin/nodemon", "--harmony_default_parameters", "app.es6"]
CMD ["./server-setup.sh"]
